<!--#======================================================================= -->
<!--# Copyright (c) 2012, 2014 C4biz Softwares ME, Loetz KG. -->
<!--# All rights reserved. This program and the accompanying materials -->
<!--# are made available under the terms of the Eclipse Public License v1.0 -->
<!--# which accompanies this distribution, and is available at -->
<!--# http://www.eclipse.org/legal/epl-v10.html -->
<!--# -->
<!--# Contributors: -->
<!--# Cristiano GaviÃ£o (C4biz)- initial API and implementation -->
<!--#======================================================================= -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>org.lunifera.releng.maven</groupId>
    <artifactId>lunifera-releng-maven</artifactId>
    <name>Lunifera Release Engineering Maven - Master Parent POM</name>
    <description>A parent POM aimed to set up the build of general Maven based projects.</description>
    <packaging>pom</packaging>
    <version>0.12.5-SNAPSHOT</version>

    <modules>
        <module>lunifera-releng-maven-licenses</module>
        <module>lunifera-releng-maven-parent-mbp</module>
        <module>lunifera-releng-maven-parent-tycho</module>
        <module>lunifera-releng-maven-fpom-equinox-luna</module>
        <module>lunifera-releng-maven-fpom-felix</module>
        <module>lunifera-releng-maven-fpom-node</module>
        <module>lunifera-releng-maven-fpom-itests</module>
        <module>lunifera-releng-maven-fpom-mplugin</module>
        <module>lunifera-releng-maven-fpom-equinox-mars</module>
    </modules>

    <inceptionYear>2012</inceptionYear>

    <prerequisites>
        <maven>3.2.5</maven>
    </prerequisites>

    <organization>
        <name>Lunifera.org</name>
        <url>www.lunifera.org</url>
    </organization>

    <issueManagement>
        <system>Jira</system>
        <!-- convention is to create jira's components using the same name 
            as the aggregator projects -->
        <url>https://lunifera.atlassian.net/browse/LS?pid=10400</url>
    </issueManagement>

    <!-- ciManagement, distributionManagement(Site) and scm should be duplicated 
        for every git repository (parent pom) and in most cases for each aggregator 
        due the fact that its modules uses different parents. -->

    <ciManagement>
        <system>Jenkins</system>
        <url>${lunifera.ci.server.url}${lunifera.gitrepo.name}</url>
    </ciManagement>

    <url>${lunifera.site.repository.url}</url>
    <distributionManagement>
        <repository>
            <id>lunifera-nexus-release</id>
            <name>Nexus Release Repository</name>
            <url>${distribution.repository.release.url}</url>
        </repository>
        <snapshotRepository>
            <id>lunifera-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>${distribution.repository.snapshot.url}</url>
        </snapshotRepository>
        <site>
            <id>gh-pages</id>
            <name>Lunifera GitHub Pages</name>
            <url>${distribution.site.url}</url>
        </site>
    </distributionManagement>
    <scm>
        <!-- connection and developerConnection must be added in children 
            in order to use with git -->
        <connection>${lunifera.scm.connection}</connection>
        <developerConnection>${lunifera.scm.connection.dev}</developerConnection>
        <url>${lunifera.scm.url}</url>
        <tag>HEAD</tag>
    </scm>
    <!-- End -->

    <licenses>
        <license>
            <name>Eclipse Public License v1.0</name>
            <url>http://www.eclipse.org/legal/epl-v10.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
        <lunifera.site.skip>false</lunifera.site.skip>
        <lunifera.deploy.skip>false</lunifera.deploy.skip>

        <!-- should automatic push changes to scm repo when releasing -->
        <lunifera.release.push>true</lunifera.release.push>

        <lunifera.scm.user>lunifera</lunifera.scm.user>
        <lunifera.scm.branch>master</lunifera.scm.branch>
        <lunifera.scm.url.host>https://github.com/</lunifera.scm.url.host>
        <lunifera.scm.url>${lunifera.scm.url.host}${lunifera.scm.user}/${lunifera.gitrepo.name}/tree/${lunifera.scm.branch}</lunifera.scm.url>
        <lunifera.scm.connection.protocol>scm:git:git://</lunifera.scm.connection.protocol>
        <lunifera.scm.connection.host>github.com/</lunifera.scm.connection.host>
        <lunifera.scm.connection>${lunifera.scm.connection.protocol}${lunifera.scm.connection.host}${lunifera.scm.user}/${lunifera.gitrepo.name}.git</lunifera.scm.connection>
        <lunifera.scm.connection.dev>${lunifera.scm.connection.dev.protocol}${lunifera.scm.connection.dev.host}/${lunifera.scm.user}/${lunifera.gitrepo.name}.git</lunifera.scm.connection.dev>
        <lunifera.scm.connection.dev.protocol>scm:git:ssh://</lunifera.scm.connection.dev.protocol>
        <lunifera.scm.connection.dev.host>git@github.com</lunifera.scm.connection.dev.host>

        <!-- the base for CI URL -->
        <lunifera.ci.server.url>http://jenkins.lunifera.org:8083/job/</lunifera.ci.server.url>

        <!-- current profile to use: (pre-release|sandbox|retired) -->
        <lunifera.site.profile />

        <!-- protocol used to deploy the site -->
        <lunifera.site.protocol>github:</lunifera.site.protocol>

        <!-- points to the root of project's site at github -->
        <lunifera.site.root.url>http://lunifera.github.io</lunifera.site.root.url>

        <!-- the name of the git repository that the aggregator represents -->
        <lunifera.gitrepo.name>lunifera-releng-maven</lunifera.gitrepo.name>

        <!-- the url of the repository's site -->
        <!-- <lunifera.site.repository.url>${lunifera.site.root.url}${lunifera.gitrepo.name}</lunifera.site.repository.url> -->
        <lunifera.site.repository.url>${lunifera.site.root.url}${file.separator}${lunifera.gitrepo.name}</lunifera.site.repository.url>

        <!-- the complete url (to be use with distribution site settings) -->
        <!-- default behavior is maven to append /${project.artifactId} in 
            the end -->
        <distribution.site.url>${lunifera.site.protocol}${lunifera.site.repository.url}</distribution.site.url>

        <!-- where to deploy the release artifacts -->
        <distribution.repository.release.url>http://maven.lunifera.org:8086/nexus/content/repositories/releases/</distribution.repository.release.url>

        <!-- where to deploy the snapshot artifacts -->
        <distribution.repository.snapshot.url>http://maven.lunifera.org:8086/nexus/content/repositories/snapshots/</distribution.repository.snapshot.url>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <osgi-version-qualifier>${maven.build.timestamp}</osgi-version-qualifier>
        <bundle.short.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</bundle.short.version>
        <bundle.full.version>${bundle.short.version}.${osgi-version-qualifier}</bundle.full.version>

        <!-- this properties must be set in settings.xml or using -Dlunifera.developer.home 
            in command line. it defaults to the current user home -->
        <lunifera.developer.home>${user.dir}${file.separator}</lunifera.developer.home>

        <!-- indicates where to stage built repositories in local machine -->
        <lunifera.developer.home.repositories>${lunifera.developer.home}${file.separator}repositories${file.separator}</lunifera.developer.home.repositories>

        <!-- indicates where to stage built repositories in local machine -->
        <lunifera.developer.home.site>${lunifera.developer.home}STAGE-SITE${file.separator}</lunifera.developer.home.site>

        <!-- this properties must be unique for the entire system -->
        <lunifera.federated.repository.label>lunifera</lunifera.federated.repository.label>

        <!-- the branch used in the build of the project. this determines 
            the behavior of some steps and its properties. (branch latest head, milestone, 
            release) -->
        <lunifera.build.branch>head</lunifera.build.branch>

        <lunifera.stage.repository.root>${lunifera.developer.home.repositories}${lunifera.federated.repository.label}${file.separator}${lunifera.build.platform.name}${file.separator}${lunifera.build.branch}${file.separator}</lunifera.stage.repository.root>

        <lunifera.stage.repository.local.dir>${lunifera.stage.repository.root}${project.artifactId}${file.separator}${bundle.full.version}${file.separator}</lunifera.stage.repository.local.dir>

        <!-- this indicates whether an old p2 published should be kept or 
            not. this should be determined by the builder.brach being used. -->
        <lunifera.stage.repository.keep.old>false</lunifera.stage.repository.keep.old>

        <!-- Dependencies Version -->
        <takari.version>1.11.7</takari.version>
        <takari.test.version>2.2.0-SNAPSHOT</takari.test.version>
        <lunifera.build.tools.version>0.2.1-SNAPSHOT</lunifera.build.tools.version>
        <gogo.runtime.version>0.12.1</gogo.runtime.version>
        <gogo.command.version>0.14.0</gogo.command.version>
        <gogo.shell.version>0.11.0-SNAPSHOT</gogo.shell.version>
        <eclipse.aether.version>1.0.0.v20140518</eclipse.aether.version>
        <paxexam.version>4.4.0</paxexam.version>
        <paxurl.version>2.3.0</paxurl.version>
        <bundlerepository.version>2.0.3-SNAPSHOT</bundlerepository.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.10.19</mockito.version>
        <osgi.testing.utils.version>1.3.0</osgi.testing.utils.version>
        <guava.version>18.0</guava.version>
        <osgi.core.version>6.0.0</osgi.core.version>
        <slf4j.version>1.7.9</slf4j.version>
        <logback.version>1.1.2</logback.version>
        <shiro.version>1.2.3</shiro.version>
        <ecf.version>3.9.0</ecf.version>
        <maven.version>3.2.5</maven.version>
        <powermock.version>1.6.0</powermock.version>
        <hamcrest.version>1.3</hamcrest.version>
        <aries.subsystems.version>1.0.1-SNAPSHOT</aries.subsystems.version>
        <aries.version>1.1.0</aries.version>
        <equinox.region.version>1.2.0.v20140128-1636</equinox.region.version>

        <report.javadoc.version>2.10</report.javadoc.version>
        <report.license.version>1.8</report.license.version>
        <report.version.version>2.1</report.version.version>
        <report.surefire.version>${surefire.version}</report.surefire.version>
        <report.jxr.version>2.5</report.jxr.version>
        <report.sonar.version>0.1</report.sonar.version>
        <report.project-info.version>2.7</report.project-info.version>

        <!-- license configuration -->
        <!-- default license to use for children -->
        <license.licenseName>epl_v1</license.licenseName>
        <license.failIfWarning>false</license.failIfWarning>
        <license.dryRun>true</license.dryRun>
        <license.copyrightOwners>C4biz Softwares ME, Loetz KG</license.copyrightOwners>
        <license.skip.header>false</license.skip.header>
        <license.roots>src</license.roots>
        <license.canUpdateCopyright>true</license.canUpdateCopyright>
        <license.canUpdateDescription>true</license.canUpdateDescription>

        <!-- maven plugins -->
        <surefire.version>2.17</surefire.version>
        <maven.site.version>3.4</maven.site.version>
        <maven.source.version>2.3</maven.source.version>
        <sonar.maven.version>2.4</sonar.maven.version>

        <lunifera.report.short>false</lunifera.report.short>

        <!-- ************************ -->
        <!-- JACOCO and Sonar/Reporting settings -->
        <!-- ************************ -->
        <jacoco.version>0.7.2.201409121644</jacoco.version>

        <!-- The Sonar Jacoco Listener for JUnit to extract coverage details 
            per test -->
        <sonar-jacoco-listeners.version>2.7</sonar-jacoco-listeners.version>
        <lunifera.jacoco.include>*/**</lunifera.jacoco.include>

        <!-- Sonar/Jacoco integration. Note that you need to call this profile 
            when to execute mvn sonar:sonar -->
        <sonar.host.url>http://88.198.33.16:9000/</sonar.host.url>

        <!-- Tells Sonar to use jacoco for coverage results -->
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

        <!-- Don't let Sonar execute tests. We will ask it to Maven -->
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <!-- The system property jacoco.outputDir needs to be override on 
            the command line with an absolute path if you want to merge results from 
            all modules. Example in a Jenkins build where ${WORKSPACE} is defined and 
            your project is in the root directory of the workspace : mvn clean install 
            -Prun-its,coverage -Djacoco.outputDir=${WORKSPACE}/target. Note that unfortunately 
            using the following does not work because of http://jira.codehaus.org/browse/SONAR-3427: 
            <jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir> -->
        <jacoco.outputDir>${project.basedir}/../target/</jacoco.outputDir>

        <!-- Jacoco output file for UTs -->
        <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>

        <!-- Tells Sonar where the Jacoco coverage result file is located 
            for Unit Tests -->
        <sonar.jacoco.reportPath>${jacoco.outputDir}${jacoco.out.ut.file}</sonar.jacoco.reportPath>

        <!-- Jacoco output file for ITs -->
        <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>

        <!-- Tells Sonar where the Jacoco coverage result file is located 
            for Integration Tests -->
        <sonar.jacoco.itReportPath>${jacoco.outputDir}${jacoco.out.it.file}</sonar.jacoco.itReportPath>

        <sonar.language>java</sonar.language>

        <!-- BINDEX -->
        <pojosr.version>0.2.1</pojosr.version>

    </properties>

    <profiles>
        <profile>
            <!-- this profile must be activated when there isn't lunifera.build.branch 
                defined. -->
            <id>latest</id>
            <activation>
                <property>
                    <name>!lunifera.build.branch</name>
                </property>
            </activation>
            <properties>
                <lunifera.build.branch>latest</lunifera.build.branch>
                <lunifera.stage.artifact.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}</lunifera.stage.artifact.version>
                <!-- is used to request that repositories that was generated 
                    and exported by old buildings do not be touched. -->
                <lunifera.stage.repository.keep.old>false</lunifera.stage.repository.keep.old>
            </properties>
            <build>
                <plugins>

                </plugins>
            </build>
        </profile>
        <profile>
            <id>milestone</id>
            <activation>
                <property>
                    <name>lunifera.build.branch</name>
                    <value>milestone</value>
                </property>
            </activation>
            <properties>
                <lunifera.build.branch>milestone</lunifera.build.branch>
                <lunifera.stage.artifact.version>M${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}</lunifera.stage.artifact.version>
                <lunifera.stage.repository.keep.old>true</lunifera.stage.repository.keep.old>
            </properties>
            <build>
                <plugins>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>GA</id>
            <activation>
                <property>
                    <name>lunifera.build.branch</name>
                    <value>release</value>
                </property>
            </activation>
            <properties>
                <lunifera.build.branch>release</lunifera.build.branch>
                <lunifera.stage.artifact.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</lunifera.stage.artifact.version>
                <lunifera.stage.repository.keep.old>true</lunifera.stage.repository.keep.old>
            </properties>
            <build>
                <plugins>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>whenIsAggregatorProject</id>
            <activation>
                <file>
                    <exists>.lunifera.releng.aggregator</exists>
                </file>
            </activation>
            <properties>
                <lunifera.scm.url>${lunifera.scm.url.host}${lunifera.scm.user}/${lunifera.gitrepo.name}/tree/${lunifera.scm.branch}/${project.artifactId}/</lunifera.scm.url>
            </properties>
        </profile>

        <profile>
            <id>whenIsRootProject</id>
            <activation>
                <file>
                    <exists>.lunifera.releng.root</exists>
                </file>
            </activation>
            <properties>
                <lunifera.scm.url>${lunifera.scm.url.host}${lunifera.scm.user}/${lunifera.gitrepo.name}</lunifera.scm.url>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-site-plugin</artifactId>
                            <inherited>true</inherited>
                            <configuration>
                                <stagingDirectory>${lunifera.developer.home.site}</stagingDirectory>
                                <siteDirectory>${basedir}${file.separator}src${file.separator}site</siteDirectory>
                                <topSiteURL>${lunifera.site.root.url}</topSiteURL>
                            </configuration>
                            <executions>
                                <execution>
                                    <id>attach-file</id>
                                    <goals>
                                        <goal>attach-descriptor</goal>
                                    </goals>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.sonar-plugins</groupId>
                        <artifactId>maven-report</artifactId>
                        <version>${report.sonar.version}</version>
                        <configuration>
                            <sonarHostURL>${sonar.host.url}</sonarHostURL>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${report.project-info.version}</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <!-- distribution-management, index, 
                                        dependencies, help, issue-tracking, plugins, cim, license, dependency-management, 
                                        mailing-list, project-team, dependency-convergence, scm, plugin-management, 
                                        modules, summary -->
                                    <report>index</report>
                                    <report>modules</report>
                                    <report>project-team</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <configuration>
                            <additionalDependencies>
                                <additionalDependency>
                                    <groupId>org.osgi</groupId>
                                    <artifactId>org.osgi.core</artifactId>
                                    <version>6.0.0</version>
                                </additionalDependency>
                            </additionalDependencies>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <id>javadoc-aggregate</id>
                                <configuration>
                                    <!-- Specific configuration for the aggregate 
                                        report -->
                                </configuration>
                                <reports>
                                    <report>aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${report.jxr.version}</version>
                        <configuration>
                            <aggregate>true</aggregate>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <version>${report.surefire.version}</version>
                        <configuration>
                            <aggregate>true</aggregate>
                        </configuration>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>full-project-info-report</id>
            <activation>
                <file>
                    <missing>.lunifera.releng.root</missing>
                </file>
                <property>
                    <name>lunifera.build.release</name>
                </property>
            </activation>
            <properties>
                <javadocJreApiVersion>7</javadocJreApiVersion>
            </properties>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${report.jxr.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-changes-plugin</artifactId>
                        <version>2.11</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>jira-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>${report.version.version}</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>dependency-updates-report</report>
                                    <report>plugin-updates-report</report>
                                    <report>property-updates-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>taglist-maven-plugin</artifactId>
                        <version>2.4</version>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${report.license.version}</version>
                        <reportSets>
                            <reportSet>
                                <id>licenses-report</id>
                                <reports>
                                    <report>third-party-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${report.project-info.version}</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <!-- distribution-management, index, 
                                        dependencies, help, issue-tracking, plugins, cim, license, dependency-management, 
                                        mailing-list, project-team, dependency-convergence, scm, plugin-management, 
                                        modules, summary -->
                                    <report>index</report>
                                    <report>distribution-management</report>
                                    <report>issue-tracking</report>
                                    <report>plugins</report>
                                    <report>cim</report>
                                    <report>dependency-management</report>
                                    <report>license</report>
                                    <report>dependencies</report>
                                    <report>plugin-management</report>
                                    <report>dependency-convergence</report>
                                    <report>summary</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>2.1</version>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>dependency-updates-report</report>
                                    <report>plugin-updates-report</report>
                                    <report>property-updates-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>check-license</id>
            <activation>
                <file>
                    <missing>.lunifera.releng.root</missing>
                </file>
                <property>
                    <name>lunifera.build.full</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>license-maven-plugin</artifactId>
                            <version>${report.license.version}</version>
                            <inherited>true</inherited>
                            <configuration>
                                <skipAddThirdParty>${lunifera.build.ignore.license}</skipAddThirdParty>
                                <skipCheckLicense>${lunifera.build.ignore.license}</skipCheckLicense>
                                <verbose>false</verbose>
                                <acceptPomPackaging>true</acceptPomPackaging>
                                <generateBundle>true</generateBundle>
                                <deployMissingFile>false</deployMissingFile>
                                <useRepositoryMissingFiles>true</useRepositoryMissingFiles>
                                <quiet>false</quiet>
                                <useMissingFile>true</useMissingFile>
                                <failIfWarning>${license.failIfWarning}</failIfWarning>
                                <encoding>UTF-8</encoding>
                                <useAsMissingFileRepository>org.lunifera.releng.maven:lunifera-releng-maven-licenses:0.12.5-SNAPSHOT</useAsMissingFileRepository>
                                <licenseMerges>
                                    <licenseMerge>
                                        The Apache Software License, Version 2.0|Apache
                                        License, Version
                                        2.0|Apache License V2.0|Apache 2|ASF
                                        2.0|apache-2.0|Apache
                                        Public License 2.0
                                    </licenseMerge>
                                    <licenseMerge>BSD License|BSD
                                        license|BSD</licenseMerge>
                                    <licenseMerge>MIT License|MIT
                                        license|MIT</licenseMerge>
                                    <licenseMerge>
                                        Lesser General Public License (LPGL) v 2.1|GNU
                                        Lesser General
                                        Public License, 2.1|LGPL 2.1
                                    </licenseMerge>
                                    <licenseMerge>
                                        Lesser General Public License (LPGL)|GNU Lesser
                                        General Public
                                        License|GNU LESSER GENERAL PUBLIC
                                        LICENSE|LGPL|lgpl
                                    </licenseMerge>
                                    <licenseMerge>
                                        COMMON DEVELOPMENT AND DISTRIBUTION LICENSE
                                        (CDDL)
                                        Version
                                        1.0|Common Development and Distribution License
                                        (CDDL)
                                        v1.0
                                    </licenseMerge>
                                    <licenseMerge>Indiana University
                                        Extreme! Lab Software
                                        License,
                                        vesion 1.1.1|Indiana University Extreme! Lab
                                        Software License</licenseMerge>
                                </licenseMerges>
                                <skipUpdateProjectLicense>true</skipUpdateProjectLicense>
                                <skipAddThirdParty>true</skipAddThirdParty>
                                <skipCheckLicense>true</skipCheckLicense>

                            </configuration>
                            <executions>
                                <execution>
                                    <id>update-license-files</id>
                                    <goals>
                                        <goal>update-project-license</goal>
                                        <goal>add-third-party</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <id>update-file-header</id>
                                    <goals>
                                        <goal>update-file-header</goal>
                                    </goals>
                                    <phase>process-sources</phase>
                                    <configuration>
                                        <excludes>
                                            <exclude>**/THIRD-PARTY.properties</exclude>
                                        </excludes>
                                        <canUpdateCopyright>${license.canUpdateCopyright}</canUpdateCopyright>
                                        <canUpdateDescription>${license.canUpdateDescription}</canUpdateDescription>
                                        <acceptPomPackaging>false</acceptPomPackaging>
                                        <verbose>false</verbose>
                                        <copyrightOwners>${license.copyrightOwners}</copyrightOwners>
                                        <dryRun>${license.dryRun}</dryRun>
                                        <failOnMissingHeader>${license.failIfWarning}</failOnMissingHeader>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- Just in case the developer have forgotten to set it in settings.xml -->
            <id>set.workspace.location</id>
            <activation>
                <property>
                    <name>!lunifera.developer.home</name>
                </property>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <lunifera.developer.home>${env.HOME}${file.separator}lunifera-dev${file.separator}</lunifera.developer.home>
                <lunifera.stage.site.dir>${lunifera.developer.home}site${file.separator}</lunifera.stage.site.dir>
            </properties>
        </profile>

        <profile>
            <id>sign</id>
            <activation>
                <file>
                    <missing>.lunifera.releng.root</missing>
                </file>
                <property>
                    <name>lunifera.build.release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jarsigner-plugin</artifactId>
                        <version>1.3.2</version>
                        <configuration>
                            <verify>true</verify>
                            <storetype>jks</storetype>
                            <tsa>https://timestamp.geotrust.com/tsa</tsa>
                        </configuration>
                        <executions>
                            <execution>
                                <id>sign</id>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>remove.old.build</id>
            <activation>
                <property>
                    <name>lunifera.build.release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>remove-old-artifacts</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>remove-project-artifact</goal>
                                </goals>
                                <configuration>
                                    <removeAll>false</removeAll><!-- When 
                                        true, remove all built artifacts including all versions. When false, remove 
                                        all built artifacts of this project version -->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- This profile is used to gather code coverage for Sonar -->
        <profile>
            <id>codeCoverage</id>
            <activation>
                <file>
                    <missing>.lunifera.releng.root</missing>
                </file>
                <property>
                    <name>lunifera.build.full</name>
                </property>
            </activation>
            <properties>
            </properties>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.sonar-plugins</groupId>
                        <artifactId>maven-report</artifactId>
                        <version>${report.sonar.version}</version>
                        <configuration>
                            <sonarHostURL>${sonar.host.url}</sonarHostURL>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <version>${report.surefire.version}</version>
                        <reportSets>
                            <reportSet>
                                <id>integration-tests</id>
                                <reports>
                                    <report>report-only</report>
                                    <report>failsafe-report-only</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Setup jacoco -->
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <configuration>
                                <skip>${jacoco.skip}</skip>
                            </configuration>
                            <executions>
                                <!-- Prepares a variable, jacoco.agent.ut.arg, 
                                    that contains the info to be passed to the JVM hosting the code being tested. -->
                                <execution>
                                    <id>prepare-ut-agent</id>
                                    <phase>process-test-classes</phase>
                                    <goals>
                                        <goal>prepare-agent</goal>
                                    </goals>
                                    <configuration>
                                        <destFile>${sonar.jacoco.reportPath}</destFile>
                                        <propertyName>jacoco.agent.ut.arg</propertyName>
                                        <append>true</append>
                                        <includes>
                                            <include>${lunifera.jacoco.include}</include>
                                        </includes>
                                    </configuration>
                                </execution>
                                <!-- Prepares a variable, jacoco.agent.it.arg, 
                                    that contains the info to be passed to the JVM hosting the code being tested. -->
                                <execution>
                                    <id>prepare-it-agent</id>
                                    <phase>pre-integration-test</phase>
                                    <goals>
                                        <goal>prepare-agent-integration</goal>
                                    </goals>
                                    <configuration>
                                        <destFile>${sonar.jacoco.itReportPath}</destFile>
                                        <propertyName>jacoco.agent.it.arg</propertyName>
                                        <append>true</append>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>post-test</id>
                                    <goals>
                                        <goal>report</goal>
                                    </goals>
                                    <configuration>
                                        <dataFile>${sonar.jacoco.reportPath}</dataFile>
                                    </configuration>
                                </execution>
                                <execution>
                                    <id>post-itest</id>
                                    <goals>
                                        <goal>report-integration</goal>
                                    </goals>
                                    <configuration>
                                        <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sonar-maven-plugin</artifactId>
                    </plugin>

                    <!-- Enabling use of jacoco -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.codehaus.sonar-plugins.java</groupId>
                    <artifactId>sonar-jacoco-listeners</artifactId>
                    <version>${sonar-jacoco-listeners.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>

        <profile>
            <id>lifecycle-mapping-in-eclipse</id>
            <!-- activated only when running in m2e (eclipse) -->
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.apache.maven.plugins</groupId>
                                                <artifactId>maven-dependency-plugin</artifactId>
                                                <versionRange>[2.0,)</versionRange>
                                                <goals>
                                                    <goal>copy-dependencies</goal>
                                                    <goal>unpack</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore />
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.apache.maven.plugins</groupId>
                                                <artifactId>maven-plugin-plugin</artifactId>
                                                <versionRange>[3.0,)</versionRange>
                                                <goals>
                                                    <goal>descriptor</goal>
                                                    <goal>helpmojo</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <runOnIncremental>false</runOnIncremental>
                                                    <runOnConfiguration>true</runOnConfiguration>
                                                </execute>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.apache.maven.plugins</groupId>
                                                <artifactId>maven-antrun-plugin</artifactId>
                                                <versionRange>[1.0,)</versionRange>
                                                <goals>
                                                    <goal>run</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <runOnIncremental>false</runOnIncremental>
                                                    <runOnConfiguration>true</runOnConfiguration>
                                                </execute>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.jacoco</groupId>
                                                <artifactId>jacoco-maven-plugin</artifactId>
                                                <versionRange>[0.6,)
                                                </versionRange>
                                                <goals>
                                                    <goal>prepare-agent</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <!-- m2e doesn't know what 
                                                    to do with jacoco, let's ignore it or annoying error markers appear see http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
                                                <ignore />
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.codehaus.mojo</groupId>
                                                <artifactId>license-maven-plugin</artifactId>
                                                <versionRange>[1.7,)</versionRange>
                                                <goals>
                                                    <goal>add-third-party</goal>
                                                    <goal>update-project-license</goal>
                                                    <goal>update-file-header</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <ignore />
                                                </execute>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.ops4j.pax.exam</groupId>
                                                <artifactId>maven-paxexam-plugin</artifactId>
                                                <versionRange>[1.2.4,)</versionRange>
                                                <goals>
                                                    <goal>
                                                        generate-depends-file
                                                    </goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <runOnIncremental>false</runOnIncremental>
                                                    <runOnConfiguration>true</runOnConfiguration>
                                                </execute>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <developers>
        <developer>
            <id>cvgaviao</id>
            <name>Cristiano GaviÃ£o</name>
            <email>cvgaviao@gmail.com</email>
            <timezone>-3</timezone>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>florianpirchner</id>
            <name>Florian Pirchner</name>
            <email>florian.pirchner@gmail.com</email>
            <timezone>+2</timezone>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>haglo</id>
            <name>Hans-George GlÃ¶ckler</name>
            <email>hans-georg.gloeckler@uni-ulm.de</email>
            <timezone>+2</timezone>
            <roles>
                <role>Build and release manager</role>
            </roles>
        </developer>
    </developers>

    <contributors>
        <contributor>
        </contributor>
    </contributors>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <inherited>false</inherited>
                <configuration>
                    <stagingDirectory>${lunifera.developer.home.site}</stagingDirectory>
                    <siteDirectory>${project.basedir}/src/site</siteDirectory>
                    <topSiteURL>${lunifera.site.root.url}</topSiteURL>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-file</id>
                        <goals>
                            <goal>attach-descriptor</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>parse-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.9.1</version>
                    <executions>
                        <execution>
                            <id>parse-version</id>
                            <goals>
                                <goal>parse-version</goal>
                            </goals>
                            <phase>validate</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar.maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>2.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>2.6</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>2.13</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.version}</version>
                    <inherited>true</inherited>
                    <dependencies>
                        <dependency><!-- add support for ssh/scp -->
                            <groupId>org.apache.maven.wagon</groupId>
                            <artifactId>wagon-ssh</artifactId>
                            <version>2.6</version>
                        </dependency>
                        <!-- support to github pages deployment http://site.trajano.net/wagon-git/ -->
                        <dependency>
                            <groupId>net.trajano.wagon</groupId>
                            <artifactId>wagon-git</artifactId>
                            <version>2.0.1</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.maven.skins</groupId>
                            <artifactId>maven-fluido-skin</artifactId>
                            <version>1.3.1</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <stagingDirectory>${lunifera.developer.home.site}</stagingDirectory>
                        <topSiteURL>${lunifera.site.root.url}</topSiteURL>
                        <siteDirectory>${project.parent.basedir}/src/site</siteDirectory>
                        <chmod>true</chmod>
                        <inputEncoding>UTF-8</inputEncoding>
                        <outputEncoding>UTF-8</outputEncoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.sonar-plugins</groupId>
                    <artifactId>maven-report</artifactId>
                    <version>0.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${report.surefire.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>${report.jxr.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jarsigner-plugin</artifactId>
                    <version>1.3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${report.javadoc.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.1</version>
                    <configuration>
                        <goals>deploy site-deploy</goals>
                        <preparationGoals>clean install</preparationGoals>
                        <arguments>
                            -Dlunifera.build.release -Dlunifera.build.full -Dlunifera.build.itests.run
                        </arguments>
                        <localCheckout>true</localCheckout>
                        <tagNameFormat>v@{project.version}</tagNameFormat>
                        <pushChanges>${lunifera.release.push}</pushChanges>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.5</version>
                </plugin>
                <plugin>
                    <groupId>org.fornax.toolsupport</groupId>
                    <artifactId>fornax-oaw-m2-plugin</artifactId>
                    <version>3.4.0</version>
                    <configuration>
                        <workflowEngine>mwe2</workflowEngine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.xtend</groupId>
                    <artifactId>xtend-maven-plugin</artifactId>
                    <version>2.7.2</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${report.version.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>animal-sniffer-maven-plugin</artifactId>
                    <version>1.11</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.3.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>1.9</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.9</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-core</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>osgi-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>hamcrest-core</artifactId>
                        <groupId>org.hamcrest</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-api-mockito</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.powermock</groupId>
                <artifactId>powermock-module-junit4</artifactId>
                <version>${powermock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-integration</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.runtime</artifactId>
                <version>${gogo.runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.command</artifactId>
                <version>${gogo.command.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>org.osgi.compendium</artifactId>
                        <groupId>org.osgi</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>org.osgi.core</artifactId>
                        <groupId>org.osgi</groupId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.felix</groupId>
                        <artifactId>org.apache.felix.bundlerepository</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.gogo.shell</artifactId>
                <version>${gogo.shell.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.bundlerepository</artifactId>
                <version>2.0.3-SNAPSHOT</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.core</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>easymock</artifactId>
                        <groupId>org.easymock</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.knowhowlab.osgi</groupId>
                <artifactId>org.knowhowlab.osgi.testing.utils</artifactId>
                <version>${osgi.testing.utils.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.compendium</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.knowhowlab.osgi</groupId>
                <artifactId>org.knowhowlab.osgi.testing.assertions</artifactId>
                <version>${osgi.testing.utils.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.compendium</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.lunifera.releng.maven</groupId>
                <artifactId>lunifera-releng-maven-licenses</artifactId>
                <version>0.12.5-SNAPSHOT</version>
                <classifier>third-party</classifier>
                <type>properties</type>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.annotation</artifactId>
                <version>${osgi.core.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>${osgi.core.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.compendium</artifactId>
                <version>5.0.0</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.felix</groupId>
                <artifactId>org.apache.felix.scr.ds-annotations</artifactId>
                <version>1.2.8</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>