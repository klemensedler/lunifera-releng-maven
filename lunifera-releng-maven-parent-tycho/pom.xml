<?xml version="1.0" encoding="UTF-8"?>
<!--#======================================================================= -->
<!--# Copyright (c) 2012, 2014 C4biz Softwares ME, Loetz KG. -->
<!--# All rights reserved. This program and the accompanying materials -->
<!--# are made available under the terms of the Eclipse Public License v1.0 -->
<!--# which accompanies this distribution, and is available at -->
<!--# http://www.eclipse.org/legal/epl-v10.html -->
<!--# -->
<!--# Contributors: -->
<!--# Cristiano GaviÃ£o (C4biz)- initial API and implementation -->
<!--#======================================================================= -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.lunifera.releng.maven</groupId>
        <artifactId>lunifera-releng-maven</artifactId>
        <version>0.12.5-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>lunifera-releng-maven-parent-tycho</artifactId>
    <name>Lunifera Releng Maven - Parent Tycho POM for Manifest-First Bundles and Fragments</name>
    <description>A parent POM aimed to set up the build of manifest-first based bundles and fragments projects using Eclipse Tycho.</description>
    <packaging>pom</packaging>

    <!-- temporary stuff in order to test tycho 0.23.0-SNAPSHOT -->
    <pluginRepositories>
        <pluginRepository>
            <id>tycho-snapshots</id>
            <url>https://repo.eclipse.org/content/repositories/tycho-snapshots/</url>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <tycho-version>0.21.0</tycho-version>
        <tychoExtrasVersion>0.21.0</tychoExtrasVersion>

        <orbit-site>http://download.eclipse.org/tools/orbit/downloads/drops/R20140525021250/repository/</orbit-site>

        <!-- these will be set by profiles (defaults to Luna) -->
        <lunifera.build.platform.name>none</lunifera.build.platform.name>
        <lunifera.build.eclipse.platform.p2.url>none</lunifera.build.eclipse.platform.p2.url>

        <!-- these will be set by profiles that deals with the local federated 
            stage repository -->
        <lunifera.build.local.federated.p2.dir>${lunifera.stage.repository.root}</lunifera.build.local.federated.p2.dir>
        <lunifera.build.local.federated.p2.url>file://${lunifera.build.local.federated.p2.dir}</lunifera.build.local.federated.p2.url>
        <lunifera.build.remote.federated.p2.url>http://lun.lunifera.org/downloads/p2/lunifera/${lunifera.build.platform.name}${file.separator}${lunifera.build.branch}</lunifera.build.remote.federated.p2.url>

        <!-- this property is calculated based on the aggregator pom's version -->
        <lunifera.stage.artifact.version>none</lunifera.stage.artifact.version>

    </properties>

    <scm>
        <connection>${lunifera.scm.connection}</connection>
        <developerConnection>${lunifera.scm.connection.dev}</developerConnection>
        <tag>HEAD</tag>
    </scm>

    <profiles>
        <profile>
            <id>platform.default</id>
            <activation>
                <property>
                    <name>!lunifera.build.platform.name</name>
                    <!-- <value>luna</value> -->
                </property>
            </activation>
            <properties>
                <lunifera.build.platform.name>luna</lunifera.build.platform.name>
                <lunifera.build.eclipse.platform.p2.url>http://download.eclipse.org/releases/luna</lunifera.build.eclipse.platform.p2.url>
            </properties>
        </profile>

        <profile>
            <id>platform.kepler</id>
            <activation>
                <property>
                    <name>lunifera.build.platform.name</name>
                    <value>kepler</value>
                </property>
            </activation>
            <properties>
                <lunifera.build.platform.name>kepler</lunifera.build.platform.name>
                <lunifera.build.eclipse.platform.p2.url>http://download.eclipse.org/releases/kepler</lunifera.build.eclipse.platform.p2.url>
            </properties>
        </profile>

        <profile>
            <id>platform.luna</id>
            <activation>
                <property>
                    <name>lunifera.build.platform.name</name>
                    <value>luna</value>
                </property>
            </activation>
            <properties>
                <lunifera.build.platform.name>luna</lunifera.build.platform.name>
                <lunifera.build.eclipse.platform.p2.url>http://download.eclipse.org/releases/luna</lunifera.build.eclipse.platform.p2.url>
            </properties>
        </profile>

        <profile>
            <id>platform.mars</id>
            <activation>
                <property>
                    <name>lunifera.build.platform.name</name>
                    <value>mars</value>
                </property>
            </activation>
            <properties>
                <lunifera.build.platform.name>mars</lunifera.build.platform.name>
                <lunifera.build.eclipse.platform.p2.url>http://download.eclipse.org/releases/mars</lunifera.build.eclipse.platform.p2.url>
            </properties>
        </profile>

        <profile>
            <id>lunifera.build.uses.local.federated.p2</id>
            <activation>
                <property>
                    <name>lunifera.build.uses.local.federated.p2</name>
                </property>
            </activation>
            <repositories>
                <repository>
                    <id>lunifera.local.federated.p2</id>
                    <url>${lunifera.build.local.federated.p2.url}</url>
                    <layout>p2</layout>
                </repository>
            </repositories>
        </profile>

        <profile>
            <id>lunifera.build.uses.remote.federated.p2</id>
            <activation>
                <property>
                    <name>lunifera.build.uses.remote.federated.p2</name>
                </property>
            </activation>
            <repositories>
                <repository>
                    <id>lunifera.remote.federated.p2</id>
                    <url>${lunifera.build.remote.federated.p2.url}</url>
                    <layout>p2</layout>
                </repository>
            </repositories>
        </profile>

        <profile>
            <id>whenIsRepositoryP2Project</id>
            <activation>
                <file>
                    <exists>.lunifera.releng.eclipse.p2</exists>
                </file>
            </activation>
            <properties>
                <!-- encoded files needed by ant task -->
                <encoded.p2index>dmVyc2lvbiA9IDEKIG1ldGFkYXRhLnJlcG9zaXRvcnkuZmFjdG9yeS5vcmRlciA9IGNvbXBvc2l0ZUNvbnRlbnQueG1sLFwhCiBhcnRpZmFjdC5yZXBvc2l0b3J5LmZhY3Rvcnkub3JkZXIgPSBjb21wb3NpdGVBcnRpZmFjdHMueG1sLFwh</encoded.p2index>
                <encoded.compositeArtifacts>PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4KPD9jb21wb3NpdGVBcnRpZmFjdFJlcG9zaXRvcnkgdmVyc2lvbj0nMS4wLjAnPz4KPHJlcG9zaXRvcnkgbmFtZT0nTHVuaWZlcmEgVXBkYXRlIFNpdGUnIHR5cGU9J29yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwucDIuYXJ0aWZhY3QucmVwb3NpdG9yeS5Db21wb3NpdGVBcnRpZmFjdFJlcG9zaXRvcnknIHZlcnNpb249JzEuMC4wJz4KICA8cHJvcGVydGllcyBzaXplPScxJz4KCTxwcm9wZXJ0eSBuYW1lPSdwMi50aW1lc3RhbXAnIHZhbHVlPScxMjQzODIyNTAyNDQwJy8+CiAgPC9wcm9wZXJ0aWVzPgogIDxjaGlsZHJlbiBzaXplPScwJz4JCiAgPC9jaGlsZHJlbj4KPC9yZXBvc2l0b3J5Pg==</encoded.compositeArtifacts>
                <encoded.compositeContent>PD94bWwgdmVyc2lvbj0nMS4wJyBlbmNvZGluZz0nVVRGLTgnPz4KPD9jb21wb3NpdGVNZXRhZGF0YVJlcG9zaXRvcnkgdmVyc2lvbj0nMS4wLjAnPz4KPHJlcG9zaXRvcnkgbmFtZT0nTHVuaWZlcmEgVXBkYXRlIFNpdGUnIHR5cGU9J29yZy5lY2xpcHNlLmVxdWlub3guaW50ZXJuYWwucDIubWV0YWRhdGEucmVwb3NpdG9yeS5Db21wb3NpdGVNZXRhZGF0YVJlcG9zaXRvcnknIHZlcnNpb249JzEuMC4wJz4KICA8cHJvcGVydGllcyBzaXplPScxJz4KCTxwcm9wZXJ0eSBuYW1lPSdwMi50aW1lc3RhbXAnIHZhbHVlPScxMjQzODIyNTAyNDk5Jy8+CiAgPC9wcm9wZXJ0aWVzPgogIDxjaGlsZHJlbiBzaXplPScwJz4KICA8L2NoaWxkcmVuPgo8L3JlcG9zaXRvcnk+</encoded.compositeContent>
                <jacoco.skip>true</jacoco.skip>
                <license.skipAddThirdParty>true</license.skipAddThirdParty>
                <license.skipCheckLicense>true</license.skipCheckLicense>
                <license.skipCheckLicense>true</license.skipCheckLicense>

                <!-- this properties should be overridden for each repository 
                    POM -->
                <lunifera.stage.p2.label>${project.artifactId}</lunifera.stage.p2.label>
            </properties>
            <build>
                <plugins>
<!--                     <plugin> -->
<!--                         <groupId>org.lunifera.tools.build</groupId> -->
<!--                         <artifactId>org.lunifera.tools.build.maven.plugin.repoindex</artifactId> -->
<!--                         <inherited>true</inherited> -->
<!--                         <executions> -->
<!--                             <execution> -->
<!--                                 <id>indexRepository</id> -->
<!--                                 <goals> -->
<!--                                     <goal>generateIndex</goal> -->
<!--                                 </goals> -->
<!--                                 <phase>package</phase> -->
<!--                                 <inherited>true</inherited> -->
<!--                                 <configuration> -->
<!--                                     <rootDir>${project.build.directory}/repository/</rootDir> -->
<!--                                     <includeFilePatterns> -->
<!--                                         <includeFilePattern>**/plugins/*.jar</includeFilePattern> -->
<!--                                     </includeFilePatterns> -->
<!--                                 </configuration> -->
<!--                             </execution> -->
<!--                         </executions> -->
<!--                     </plugin> -->
                    <plugin>
                        <groupId>org.eclipse.tycho</groupId>
                        <artifactId>target-platform-configuration</artifactId>
                        <configuration>
                            <resolver>p2</resolver>
                            <pomDependencies>consider</pomDependencies>
                            <environments>
                                <environment>
                                    <os>win32</os>
                                    <ws>win32</ws>
                                    <arch>x86_64</arch>
                                </environment>
                                <environment>
                                    <os>linux</os>
                                    <ws>gtk</ws>
                                    <arch>x86</arch>
                                </environment>
                                <environment>
                                    <os>linux</os>
                                    <ws>gtk</ws>
                                    <arch>x86_64</arch>
                                </environment>
                                <environment>
                                    <os>macosx</os>
                                    <ws>cocoa</ws>
                                    <arch>x86_64</arch>
                                </environment>
                            </environments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>whenIsRepositoryP2Project.stage.p2</id>
            <activation>
                <file>
                    <exists>.lunifera.releng.eclipse.p2</exists>
                </file>
                <property>
                    <name>lunifera.stage.p2</name>
                </property>
            </activation>
            <properties>
                <lunifera.stage.p2.log.file.path>${project.basedir}${file.separator}build.${lunifera.stage.p2.label}.${lunifera.build.platform.name}.${lunifera.build.branch}.log.properties</lunifera.stage.p2.log.file.path>
                <lunifera.stage.p2.origin.dir>${project.build.directory}${file.separator}repository</lunifera.stage.p2.origin.dir>
                <lunifera.stage.p2.target.dir>${lunifera.stage.repository.local.dir}</lunifera.stage.p2.target.dir>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-files</id>
                                <phase>verify</phase>
                                <configuration>
                                    <quiet>true</quiet>
                                    <target>
                                        <taskdef name="groovy"
                                            classname="org.codehaus.groovy.ant.Groovy">
                                            <classpath
                                                refid="maven.compile.classpath" />
                                        </taskdef>
                                        <taskdef
                                            resource="net/sf/antcontrib/antlib.xml" />
                                        <taskdef name="xmltask"
                                            classname="com.oopsconsultancy.xmltask.ant.XmlTask" />

                                        <echo
                                            message="Federated Repository Local Dir (lunifera.build.local.federated.p2.dir): ${lunifera.build.local.federated.p2.dir}" />
                                        <echo
                                            message="Platform: ${lunifera.build.platform.name}" />
                                        <echo
                                            message="Build Type: ${lunifera.build.branch}" />
                                        <echo
                                            message="Repo Name: ${lunifera.stage.p2.label}" />
                                        <echo
                                            message="Repo Keep Old: ${lunifera.stage.repository.keep.old}" />
                                        <echo
                                            message="Repo Version: ${lunifera.stage.artifact.version}" />
                                        <echo
                                            message="Log File (lunifera.stage.p2.log.file.path): ${lunifera.stage.p2.log.file.path}" />
                                        <echo
                                            message="P2 Source Dir (lunifera.stage.p2.origin.dir): ${lunifera.stage.p2.origin.dir}" />
                                        <echo
                                            message="P2 Target Dir (lunifera.stage.p2.target.dir): ${lunifera.stage.p2.target.dir}" />

                                        <!-- "init" -->
                                        <fail
                                            message="There property 'lunifera.developer.home' was not defined in settings.xml or in commandline.">
                                            <condition>
                                                <or>
                                                    <not>
                                                        <isset
                                                            property="lunifera.developer.home" />
                                                    </not>
                                                    <equals
                                                        arg1="${lunifera.developer.home}"
                                                        arg2="none" />
                                                </or>
                                            </condition>
                                        </fail>
                                        <if>
                                            <not>
                                                <available
                                                    file="${lunifera.developer.home}"
                                                    type="dir" />
                                            </not>
                                            <then>
                                                <mkdir
                                                    dir="${lunifera.developer.home}" />
                                            </then>
                                        </if>
                                        <if>
                                            <not>
                                                <available
                                                    file="${lunifera.developer.home.repositories}"
                                                    type="dir" />
                                            </not>
                                            <then>
                                                <mkdir
                                                    dir="${lunifera.developer.home.repositories}" />
                                            </then>
                                        </if>
                                        <if>
                                            <not>
                                                <available
                                                    file="${lunifera.build.local.federated.p2.dir}"
                                                    type="dir" />
                                            </not>
                                            <then>
                                                <mkdir
                                                    dir="${lunifera.build.local.federated.p2.dir}" />
                                            </then>
                                        </if>
                                        <groovy>
                                            ant.echo "Extracted building templates..."

                                            def
                                            separator =
                                            "${properties['file.separator']}"
                                            def directory =
                                            "${properties['project.build.directory']}" + separator +
                                            "templates" + separator

                                            new
                                            File(directory).mkdir()

                                            def
                                            encodedP2index =
                                            "${properties['encoded.p2index']}"
                                            def
                                            encodedCompositeArtifacts =
                                            "${properties['encoded.compositeArtifacts']}"
                                            def
                                            encodedCompositeContent =
                                            "${properties['encoded.compositeContent']}"

                                            properties.p2indexFile = directory + "p2.index"
                                            properties.compositeArtifactsFile = directory +
                                            "compositeArtifacts.xml"
                                            properties.compositeContentFile =
                                            directory + "compositeContent.xml"

                                            new
                                            FileOutputStream(properties.p2indexFile).write(encodedP2index.decodeBase64())
                                            new
                                            FileOutputStream(properties.compositeArtifactsFile).write(encodedCompositeArtifacts.decodeBase64())
                                            new
                                            FileOutputStream(properties.compositeContentFile).write(encodedCompositeContent.decodeBase64())

                                        </groovy>
                                        <echo
                                            message="** Lunifera User Developer Home: ${lunifera.developer.home}" />
                                        <echo
                                            message=" - index source: ${p2indexFile}" />
                                        <echo
                                            message=" - contentFile source: ${compositeContentFile}" />
                                        <echo
                                            message=" - artifactsFile source: ${compositeArtifactsFile}" />

                                        <!-- generate.composite.p2.init -->

                                        <fail
                                            message="Could not find p2.index template at ${p2indexFile} !">
                                            <condition>
                                                <not>
                                                    <available
                                                        file="${p2indexFile}"
                                                        type="file" />
                                                </not>
                                            </condition>
                                        </fail>

                                        <fail
                                            message="Could not find compositeContent.xml template at ${compositeContentFile} !">
                                            <condition>
                                                <not>
                                                    <available
                                                        file="${compositeContentFile}"
                                                        type="file" />
                                                </not>
                                            </condition>
                                        </fail>

                                        <fail
                                            message="Could not find compositeArtifacts.xml template at ${compositeArtifactsFile} !">
                                            <condition>
                                                <not>
                                                    <available
                                                        file="${compositeArtifactsFile}"
                                                        type="file" />
                                                </not>
                                            </condition>
                                        </fail>

                                        <!-- "deploy.generated.p2.to.composite.dir.init" -->
                                        <echo
                                            message="Copying repo to Federated Repository !!!" />
                                        <echo
                                            message="Checking existence of log file at:'${lunifera.stage.p2.log.file.path}'" />
                                        <if>
                                            <available
                                                file="${lunifera.stage.p2.log.file.path}"
                                                type="file" />
                                            <then>
                                                <echo message="OPEN BUILD LOG" />
                                                <property
                                                    file="${lunifera.stage.p2.log.file.path}"
                                                    prefix="old" />
                                                <echoproperties
                                                    prefix="old." />
                                            </then>
                                            <else>
                                                <echo
                                                    message="Log file was not found at: '${lunifera.stage.p2.log.file.path}'" />
                                            </else>
                                        </if>

                                        <!-- deploy.generated.p2.to.composite.dir.clean -->
                                        <!-- remove the latest built repository 
                                            directory -->
                                        <if>
                                            <equals
                                                arg1="${lunifera.stage.repository.keep.old}"
                                                arg2="false" />
                                            <then>
                                                <echo
                                                    message="Checking property 'old.lunifera.stage.p2.target.dir'" />
                                                <if>
                                                    <isset
                                                        property="old.lunifera.stage.p2.target.dir" />
                                                    <then>
                                                        <if>
                                                            <available
                                                                file="${old.lunifera.stage.p2.target.dir}"
                                                                type="dir" />
                                                            <then>
                                                                <echo
                                                                    message="REMOVING OLD BUILD at:'${old.lunifera.stage.p2.target.dir}'" />
                                                                <delete
                                                                    includeemptydirs="true"
                                                                    failonerror="false">
                                                                    <fileset
                                                                        includes="**/*"
                                                                        dir="${old.lunifera.stage.p2.target.dir}" />
                                                                </delete>
                                                                <delete
                                                                    dir="${old.lunifera.stage.p2.target.dir}" />
                                                            </then>
                                                            <else>
                                                                <echo
                                                                    message="Old build was not found at:'${old.lunifera.stage.p2.target.dir}'" />
                                                            </else>
                                                        </if>
                                                    </then>
                                                    <else>
                                                        <echo
                                                            message="Property 'old.lunifera.stage.p2.target.dir' was not set due a missing log file." />
                                                    </else>
                                                </if>
                                            </then>
                                        </if>
                                        <!-- remove an existent repository 
                                            directory -->
                                        <if>
                                            <available
                                                file="${lunifera.stage.p2.target.dir}"
                                                type="dir" />
                                            <then>
                                                <delete
                                                    includeemptydirs="true"
                                                    failonerror="false">
                                                    <fileset
                                                        includes="**/*"
                                                        dir="${lunifera.stage.p2.target.dir}" />
                                                </delete>
                                                <delete
                                                    dir="${lunifera.stage.p2.target.dir}" />
                                            </then>
                                        </if>

                                        <!-- deploy.generated.p2.to.composite.p2 -->
                                        <!-- create the repository directory 
                                            and copy files from the generated P2 -->
                                        <echo message="COPYING P2" />
                                        <if>
                                            <available
                                                file="${lunifera.stage.p2.origin.dir}"
                                                type="dir" />
                                            <then>
                                                <mkdir
                                                    dir="${lunifera.stage.p2.target.dir}" />
                                                <copy
                                                    todir="${lunifera.stage.p2.target.dir}">
                                                    <fileset
                                                        dir="${lunifera.stage.p2.origin.dir}"
                                                        includes="**/*" />
                                                </copy>
                                                <if>
                                                    <equals
                                                        arg1="${lunifera.stage.repository.keep.old}"
                                                        arg2="false" />
                                                    <then>
                                                        <propertyfile
                                                            file="${lunifera.stage.p2.log.file.path}"
                                                            comment="Building log for ${lunifera.build.platform.name} - ${lunifera.build.branch}">
                                                            <entry
                                                                key="build.counter"
                                                                type="int"
                                                                default="0"
                                                                operation="+" />
                                                            <entry
                                                                key="build.date"
                                                                type="date"
                                                                value="now" />
                                                            <entry
                                                                key="lunifera.stage.artifact.version"
                                                                value="${lunifera.stage.artifact.version}" />
                                                            <entry
                                                                key="lunifera.stage.p2.target.dir"
                                                                value="${lunifera.stage.p2.target.dir}" />
                                                        </propertyfile>
                                                    </then>
                                                    <else>
                                                        <propertyfile
                                                            file="${lunifera.stage.p2.log.file.path}"
                                                            comment="Building log for ${lunifera.build.platform.name} - ${lunifera.build.branch}">
                                                            <entry
                                                                key="build.counter"
                                                                type="int"
                                                                default="0"
                                                                operation="+" />
                                                            <entry
                                                                key="build.date"
                                                                type="date"
                                                                value="now" />
                                                            <entry
                                                                key="lunifera.build.local.federated.p2.dir"
                                                                value="${lunifera.build.local.federated.p2.dir}" />
                                                            <entry
                                                                key="lunifera.stage.artifact.versions"
                                                                default=""
                                                                operation="+"
                                                                value=",${lunifera.stage.artifact.version}" />
                                                        </propertyfile>
                                                    </else>
                                                </if>
                                            </then>
                                            <else>
                                                <fail
                                                    message="The P2 repository was not generated in '${lunifera.stage.p2.origin.dir}' !" />
                                            </else>
                                        </if>

                                        <!-- start rebuilding... -->
                                        <echo
                                            message="Rebuilding Federated Repository !!!" />
                                        <echo
                                            message=" (lunifera.build.local.federated.p2.dir): ${lunifera.build.local.federated.p2.dir}" />

                                        <dirset id="dirs"
                                            dir="${lunifera.build.local.federated.p2.dir}"
                                            includes="*/*" />

                                        <fail
                                            message="There is no repositories to process !">
                                            <condition>
                                                <resourcecount
                                                    when="equal" count="0"
                                                    refid="dirs" />
                                            </condition>
                                        </fail>

                                        <if>
                                            <available
                                                file="${lunifera.build.local.federated.p2.dir}compositeContent.xml"
                                                type="file" />
                                            <then>
                                                <echo
                                                    message="DELETED OLD CONTENT FILE" />
                                                <delete
                                                    file="${lunifera.build.local.federated.p2.dir}compositeContent.xml" />
                                            </then>
                                        </if>
                                        <if>
                                            <available
                                                file="${lunifera.build.local.federated.p2.dir}compositeArtifacts.xml"
                                                type="file" />
                                            <then>
                                                <echo
                                                    message="DELETED OLD ARTIFACTS FILE" />
                                                <delete
                                                    file="${lunifera.build.local.federated.p2.dir}compositeArtifacts.xml" />
                                            </then>
                                        </if>

                                        <!-- generate.composite.p2.add.compositeContentFile -->
                                        <xmltask
                                            source="${compositeContentFile}"
                                            destbuffer="bufferCompositeContent"
                                            report="true" />
                                        <var name="counterContent"
                                            value="0" />
                                        <for param="child"
                                            list="${toString:dirs}"
                                            delimiter=";">
                                            <sequential>
                                                <math result="counterContent"
                                                    operand1="${counterContent}"
                                                    operand2="1"
                                                    operation="+"
                                                    datatype="int" />
                                                <echo
                                                    message="Adding Content Child @{child} - ${counterContent}" />
                                                <xmltask
                                                    sourcebuffer="bufferCompositeContent"
                                                    destbuffer="bufferCompositeContent">
                                                    <insert
                                                        path="/repository/children">
						<![CDATA[ <child location='@{child}' /> ]]>
                                                    </insert>
                                                </xmltask>
                                            </sequential>
                                        </for>
                                        <xmltask
                                            sourcebuffer="bufferCompositeContent"
                                            destbuffer="bufferCompositeContent">
                                            <replace
                                                path="/repository/children/@size"
                                                withText="${counterContent}" />
                                        </xmltask>

                                        <!-- generate.composite.p2.add.compositeArtifactsFile -->
                                        <xmltask
                                            source="${compositeArtifactsFile}"
                                            destbuffer="bufferCompositeArtifacts"
                                            report="true" />
                                        <var name="counterArtifacts"
                                            value="0" />
                                        <for param="child"
                                            list="${toString:dirs}"
                                            delimiter=";">
                                            <sequential>
                                                <math result="counterArtifacts"
                                                    operand1="${counterArtifacts}"
                                                    operand2="1"
                                                    operation="+"
                                                    datatype="int" />
                                                <echo
                                                    message="Adding Artifact Child @{child} - ${counterArtifacts}" />
                                                <xmltask
                                                    sourcebuffer="bufferCompositeArtifacts"
                                                    destbuffer="bufferCompositeArtifacts">
                                                    <insert
                                                        path="/repository/children">
						<![CDATA[ <child location='@{child}' /> ]]>
                                                    </insert>
                                                </xmltask>
                                            </sequential>
                                        </for>
                                        <xmltask
                                            sourcebuffer="bufferCompositeArtifacts"
                                            destbuffer="bufferCompositeArtifacts">
                                            <replace
                                                path="/repository/children/@size"
                                                withText="${counterArtifacts}" />
                                        </xmltask>

                                        <!-- generate.composite.p2.add.p2.index.file -->
                                        <if>
                                            <not>
                                                <available
                                                    file="${lunifera.build.local.federated.p2.dir}p2.index"
                                                    type="file" />
                                            </not>
                                            <then>
                                                <copy file="${p2indexFile}"
                                                    todir="${lunifera.build.local.federated.p2.dir}" />
                                            </then>
                                        </if>

                                        <!-- generate.composite.p2 -->
                                        <echo
                                            message="CREATE COMPOSITE ARTIFACTS" />
                                        <xmltask
                                            sourcebuffer="bufferCompositeArtifacts"
                                            dest="${lunifera.build.local.federated.p2.dir}compositeArtifacts.xml" />

                                        <echo message="CREATE COMPOSITE CONTENT" />
                                        <xmltask
                                            sourcebuffer="bufferCompositeContent"
                                            dest="${lunifera.build.local.federated.p2.dir}compositeContent.xml" />

                                        <!-- end generation -->

                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>org.codehaus.groovy</groupId>
                                <artifactId>groovy-all</artifactId>
                                <version>2.2.0</version>
                            </dependency>
                            <dependency>
                                <groupId>org.apache.ant</groupId>
                                <artifactId>ant</artifactId>
                                <version>1.8.4</version>
                            </dependency>
                            <dependency>
                                <groupId>ant-contrib</groupId>
                                <artifactId>ant-contrib</artifactId>
                                <version>1.0b3</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>ant</groupId>
                                        <artifactId>ant</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                            <dependency>
                                <groupId>net.sf.saxon</groupId>
                                <artifactId>Saxon-HE</artifactId>
                                <version>9.4</version>
                            </dependency>
                            <dependency>
                                <groupId>com.oopsconsultancy</groupId>
                                <artifactId>xmltask</artifactId>
                                <version>1.16</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>whenIsProductProject</id>
            <activation>
                <file>
                    <exists>.lunifera.releng.eclipse.rcp</exists>
                </file>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.eclipse.tycho</groupId>
                            <artifactId>tycho-p2-director-plugin</artifactId>
                            <version>${tycho-version}</version>
                            <executions>
                                <execution>
                                    <!-- install the product for all configured 
                                        os/ws/arch environments using p2 director -->
                                    <id>materialize-products</id>
                                    <goals>
                                        <goal>materialize-products</goal>
                                    </goals>
                                </execution>
                                <execution>
                                    <!-- (optional) create product zips (one 
                                        per os/ws/arch) -->
                                    <id>archive-products</id>
                                    <goals>
                                        <goal>archive-products</goal>
                                    </goals>
                                    <phase>pre-integration-test</phase>
                                </execution>
                            </executions>
                            <configuration>
                                <formats>
                                    <win32>zip</win32>
                                    <linux>tar.gz</linux>
                                    <macosx>tar.gz</macosx>
                                </formats>
                                <products>
                                    <product>
                                        <id>${project.artifactId}</id>
                                        <!-- <archiveFileName>Equinox-Luna-Standard-Node-${unqualifiedVersion}.${buildQualifier}</archiveFileName> -->
                                        <!-- (optional) customize the root 
                                            folder name of the product zip -->
                                        <!-- <rootFolder>myServer</rootFolder> -->
                                    </product>
                                </products>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <profile>
            <id>prepare-for-next-release</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <defaultGoal>org.eclipse.tycho:tycho-versions-plugin:set-version</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.tycho</groupId>
                        <artifactId>tycho-versions-plugin</artifactId>
                        <version>${tycho-version}</version>
                        <executions>
                            <execution>
                                <id>change-next-release</id>
                                <goals>
                                    <goal>set-version</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <newVersion>${next-release}</newVersion>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <repositories>
        <repository>
            <id>eclipse.p2</id>
            <url>${lunifera.build.eclipse.platform.p2.url}</url>
            <layout>p2</layout>
        </repository>
        <repository>
            <id>orbit</id>
            <url>${orbit-site}</url>
            <layout>p2</layout>
        </repository>
    </repositories>

    <build>
        <sourceDirectory>src</sourceDirectory>

        <plugins>
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>target-platform-configuration</artifactId>
            </plugin>

            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-source-plugin</artifactId>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- enable tycho build -->
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>tycho-maven-plugin</artifactId>
                    <version>${tycho-version}</version>
                    <extensions>true</extensions>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>tycho-compiler-plugin</artifactId>
                    <version>${tycho-version}</version>
                    <configuration>
                        <compilerVersion>1.6</compilerVersion>
                        <encoding>UTF-8</encoding>
                        <source>1.6</source>
                        <target>1.6</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>target-platform-configuration</artifactId>
                    <version>${tycho-version}</version>
                    <configuration>
                        <resolver>p2</resolver>
                        <pomDependencies>consider</pomDependencies>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>tycho-source-plugin</artifactId>
                    <version>${tycho-version}</version>
                    <executions>
                        <execution>
                            <id>plugin-source</id>
                            <goals>
                                <goal>plugin-source</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.tycho</groupId>
                    <artifactId>tycho-surefire-plugin</artifactId>
                    <version>${tycho-version}</version>
                    <configuration>
                        <includes>
                            <include>**/*Tests.java</include>
                        </includes>
                        <showEclipseLog>true</showEclipseLog>
                        <useUIHarness>false</useUIHarness>
                        <useUIThread>false</useUIThread>
                        <failIfNoTests>false</failIfNoTests>
                        <!-- <appArgLine>-Dfile.encoding=UTF-8</appArgLine> -->
                        <argLine>${jacoco.agent.it.arg}</argLine>
                        <!-- Kill test JVM if tests take more than 10 minutes 
                            (600 seconds) to finish -->
                        <forkedProcessTimeoutInSeconds>600</forkedProcessTimeoutInSeconds>
                    </configuration>
                </plugin>
<!--                 <plugin> -->
<!--                     <groupId>org.lunifera.tools.build</groupId> -->
<!--                     <artifactId>org.lunifera.tools.build.maven.plugin.repoindex</artifactId> -->
<!--                     <version>${lunifera.build.tools.version}</version> -->
<!--                     <configuration> -->
<!--                         <repositoryName>${lunifera.stage.p2.label}</repositoryName> -->
<!--                         <rootDir>${lunifera.stage.p2.target.dir}</rootDir> -->
<!--                     </configuration> -->
<!--                 </plugin> -->
            </plugins>
        </pluginManagement>
    </build>
    <dependencies>
<!--         <dependency> -->
<!--             <groupId>org.lunifera.releng.maven</groupId> -->
<!--             <artifactId>lunifera-releng-maven-licenses</artifactId> -->
<!--             <classifier>third-party</classifier> -->
<!--             <type>properties</type> -->
<!--             <scope>provided</scope> -->
<!--         </dependency> -->
    </dependencies>
</project>
